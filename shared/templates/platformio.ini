[env:genericSTM32F103C8]
platform = ststm32@14.2.0
board = genericSTM32F103C8
board_build.stm32cube.custom_config_header = yes
framework = stm32cube
build_type = debug
lib_archive = no
upload_protocol = custom
extra_scripts =
    pre:build_rtos.py
    post:upload.py
src_build_flags =
    -Wextra
    -Werror
    -Wfloat-equal
    -Wcast-align
    -Wlogical-op
    -Winline
    -Wshadow
    -Winit-self
    -Wmissing-prototypes
    -Wunused-function
    ; -Wstrict-prototypes
    -Wpointer-arith
    -Wno-type-limits
    -Wno-unused-local-typedefs
    -msoft-float
    -fshort-enums
    -funsigned-char
    -ffunction-sections
    -fdata-sections
build_flags =
    -I ./HW/include/
    -I ./RTOS/
    -I ./RTOS/FreeRTOS/Source/include/
    -I ./RTOS/FreeRTOS/Source/portable/GCC/ARM_CM3/
    -I ./RTOS/FreeRTOS/CMSIS/RTOS2/FreeRTOS/Include/
    -I ./RTOS/FreeRTOS/CMSIS/RTOS2/FreeRTOS/Include1/
    -I ./RTOS/CMSIS/CMSIS/Core/Include/
    -I ./RTOS/CMSIS/CMSIS/Core_A/Include/
    -I ./RTOS/CMSIS/CMSIS/RTOS2/Include/
    -I ./RTOS/CMSIS/Device/ARM/ARMCM3/Include/
    -I ./embedded/platforms/framework-stm32cubef1/Drivers/CMSIS/Device/ST/STM32F1xx/Include/
src_filter =
    +<*>            ; add everything in the src directory
    +<../HW/*.c>    ; add everything in the HW directory

[platformio]
platforms_dir = ../../embedded/platforms
packages_dir = ../../embedded/platforms
include_dir = include
src_dir = src

