/*
 * CAN.h
 * Higher level defs for CAN
 */

#pragma once

/******************************************************************************
 *                             I N C L U D E S
 ******************************************************************************/

#include "HW_CAN.h"
#include "Types.h"


/******************************************************************************
 *                              D E F I N E S
 ******************************************************************************/

#define CAN_TIMEOUT_VALUE    10U


/******************************************************************************
 *                             T Y P E D E F S
 ******************************************************************************/

typedef struct
{
    volatile CAN_regMap     * instance;
    volatile CAN_TSR_regMap * TSR;
    uint32_t                sceBits;
    uint32_t                txBits;
    uint32_t                itBits;
    CAN_RxMessage_S         rxMsg;
    struct
    {
        bool txInterrupt :1;
        bool rx0Interrupt:1;
        bool rx1Interrupt:1;
        bool rxFifo0     :1;
        bool rxFifo1     :1;
        bool sceInterrupt:1;
    } bit;
} CAN_S;


/******************************************************************************
 *                           P U B L I C  V A R S
 ******************************************************************************/

extern CAN_S CAN;


/******************************************************************************
 *                       P U B L I C  F U N C T I O N S
 ******************************************************************************/
